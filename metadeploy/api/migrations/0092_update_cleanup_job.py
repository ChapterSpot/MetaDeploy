# Generated by Django 2.2.16 on 2020-10-23 15:43

from django.db import migrations


def forwards(apps, schema_editor):
    # update RepeatableJob for cleanup, if it exists
    try:
        RepeatableJob = apps.get_model("scheduler", "RepeatableJob")
    except LookupError:
        pass
    else:
        try:
            job = RepeatableJob.objects.get(
                callable="metadeploy.api.jobs.expire_user_tokens_job"
            )
        except RepeatableJob.DoesNotExist:
            pass
        else:
            job.name = "Cleanup User Data"
            job.callable = "metadeploy.api.jobs.cleanup_user_data_job"
            job.save()

    # clear extra_data from SocialAccounts with no token, unless staff
    SocialAccount = apps.get_model("socialaccount", "SocialAccount")
    for account in SocialAccount.objects.filter().iterator():
        if not account.user.is_staff and not account.socialtoken_set.count():
            account.extra_data = {}
            account.save()


def backwards(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0091_remove_org_name_from_job"),
    ]

    operations = [migrations.RunPython(forwards, backwards)]
