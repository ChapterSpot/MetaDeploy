# Generated by Django 2.1.7 on 2019-03-04 19:38

from django.db import migrations
from django.db.models import Case, F, Value, When


def forwards(apps, schema_editor):
    PlanTemplate = apps.get_model("api", "PlanTemplate")

    # This will get the product of the first associated plan's version, or None.
    # Sadly, we can't simply .update(foo=F("bar__baz")), so we have to do stupid Case
    # tricks.
    products = PlanTemplate.objects.annotate(
        product_annotation=F("plan__version__product")
    ).values("id", "product_annotation")
    case = Case(
        *[
            When(id=product["id"], then=Value(int(product["product_annotation"])))
            for product in products
            if product["product_annotation"] is not None
        ],
        default=None,
    )
    PlanTemplate.objects.update(product_id=case)
    # For those that had no plans, and thus no product, just delete them.
    PlanTemplate.objects.filter(product__isnull=True).delete()


def backwards(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [("api", "0059_plantemplate_product")]

    operations = [migrations.RunPython(forwards, backwards)]
